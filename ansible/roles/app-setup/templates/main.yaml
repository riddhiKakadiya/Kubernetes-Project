---
apiVersion: v1
kind: "Service"
apiVersion: "v1"
metadata:
  name: "mysql"
spec:
  ports:
    -
      name: "mysql"
      protocol: "TCP"
      port: 3306
      targetPort: 3306
      nodePort: 0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: backend-django
  namespace: api
spec:
  # modify replicas according to your case
  replicas: 1
  strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 25%
  selector:
    matchLabels:
      app: webapp-backend
  template:
    metadata:
      labels:
        app: webapp-backend
    spec:
      initContainers:
      - name: init-myservice
        image: busybox:1.28
        command: ['sh', '-c', 'until nslookup elasticsearch.default; do echo waiting for elasticsearch.default; sleep 2; done;']
      containers:
      - name: backend-app
        imagePullPolicy: Always
        image: "{{ .Values.image_backend.repository }}:{{ .Values.image_backend.tag }}"
        resources:
          requests:
            memory: "64Mi"
            cpu: "1000m"
          limits:
            memory: "128Mi"
            cpu: "1000m"
        ports:
        - containerPort: 8001
        volumeMounts:
        - mountPath: /cache
          name: empty-dir-volume
        readinessProbe:
          httpGet:
            path: /pingtest
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 1
        livenessProbe:
          httpGet:
            path: /pingtest
            port: 8001
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 1
        env:
        - name: DJANGO_PROFILE
          valueFrom:
            configMapKeyRef:
              name: special-config
              key: django_profile
        - name: MARIADB_USERNAME
          value: "root"
        - name: MARIADB_DATABASE
          value: "csye7374_backend"
        - name: MARIADB_PASSWORD
          value: "Csye2019"
        - name: ELASTICSEARCH_HOST
          value: "http://elasticsearch.default.svc.cluster.local"
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: MARIADB_HOST
          valueFrom:
            configMapKeyRef:
              name: special-config
              key: mariadb_host
        - name: MARIADB_PORT
          valueFrom:
            configMapKeyRef:
              name: special-config
              key: mariadb_port
        - name: BUCKET_NAME
          valueFrom:
            configMapKeyRef:
              name: special-config
              key: attachments_bucket_name
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
           secretKeyRef:
            name: mysecret
            key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
           secretKeyRef:
            name: mysecret
            key: AWS_SECRET_ACCESS_KEY 
      imagePullSecrets:
      - name: regcred
      volumes:
      - name: empty-dir-volume
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: api
spec:
  selector:
    app: webapp-backend
  ports:
  - name: http
    protocol: TCP
    port: 8001
    nodePort: 30038
    targetPort: 8001
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend-django
  namespace: ui
spec:
  # modify replicas according to your case
  replicas: 1
  strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 25%
  selector:
    matchLabels:
      app: webapp-frontend
  template:
    metadata:
      labels:
        app: webapp-frontend
    spec:
      initContainers:
      - name: init-myservice
        image: busybox:1.28
        command: ['sh', '-c', 'until nslookup api-service.api; do echo waiting for backend.api; sleep 2; done;']
      containers:
      - name: frontend-app
        imagePullPolicy: Always
        image: "{{ .Values.image_frontend.repository }}:{{ .Values.image_frontend.tag }}"
        resources:
          requests:
            memory: "64Mi"
            cpu: "1000m"
          limits:
            memory: "128Mi"
            cpu: "1000m"
        ports:
        - containerPort: 8000
        readinessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 1
        livenessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 1
        env:
        - name: DJANGO_PROFILE
          value: "local"
        - name: BACKEND_API
          value: "/v1/allrecipes"
        - name: BACKEND_HOST
          value: "api-service.api.svc.cluster.local"
        - name: BACKEND_PORT
          value: "8001"
      imagePullSecrets:
      - name: regcred

---
apiVersion: v1
kind: Service
metadata:
  name: ui
  namespace: ui
spec:
  selector:
    app: webapp-frontend
  ports:
  - name: http
    protocol: TCP
    port: 8000
    nodePort: 30039
    targetPort: 8000
  type: LoadBalancer


---
